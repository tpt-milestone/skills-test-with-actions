# This is a basic workflow to help you get started with Actions

name: CI_2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Testing
        run: | 
          echo Testing...
          echo ${{ github.ref_name }}
          echo $GITHUB_REF
          echo $GITHUB_WORKFLOW
          echo $GITHUB_RUN_NUMBER
          echo $GITHUB_RUN_ID
          echo $GITHUB_RUN_ATTEMPT
          echo $GITHUB_REF_NAME
          echo $GITHUB_JOB
          echo $GITHUB_HEAD_REF
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_BASE_REF
          echo $GITHUB_ACTIONS
          echo $GITHUB_ACTION
          echo "$GITHUB_WORKFLOW #$GITHUB_RUN_NUMBER"
          echo "${{ github.workflow }} #${{ github.run_number }}"
        
      - name: Test file
        run: printf |
          <?xml version=\"1.0\" encoding=\"utf-8\"?>\n
          <resources>\n
            \t<string name=\"app_version\">$( grep 'app_version' file1.xml | cut -f2 -d ">" | cut -f1 -d "<" )</string>\n
            \t<string name=\"branch_name\">${{ github.ref_name }}</string>\n
            \t<string name=\"build_number\">${{ github.run_number }}</string>\n
            \t<string name=\"global_number\">${{ github.workflow }} \u0023${{ github.run_number }}</string>\n
          </resources> > log.md

      - name: Test file2
        run: printf "test2" > log2.md
        
      - name: Print the log file
        run: echo The Log contains $(cat log.md)
        
      # Runs a single command using the runners shell
      - name: Run markdown lint
        run: |
          npm config set fund false 
          npm install remark-cli remark-preset-lint-consistent vfile-reporter-json
          npx remark . --use remark-preset-lint-consistent --report vfile-reporter-json 2> remark-lint-report.json
  
      - name: Copy
        run: |
          mkdir upload
          cp log.md upload/log22.md
          cp log2.md upload/log33.md

      - uses: actions/upload-artifact@v3
        with:
          name: md-files
          path: upload/
              
